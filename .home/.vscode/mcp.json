{
  "nativeMCPServers": {
    "mcphub": {
      "autoApprove": ["get_current_servers", "toggle_mcp_server"]
    },
    "neovim": {
      "autoApprove": []
    }
  },
  "servers": {
    "fetch": {
      "args": ["mcp-server-fetch"],
      "autoApprove": ["fetch"],
      "command": "uvx",
      "disabled": false
    },
    "filesystem": {
      "args": ["-y", "mcp-server-filesystem", "${CWD}"],
      "autoApprove": [
        "get_file_info",
        "list_allowed_directories",
        "list_directory",
        "read_file",
        "read_multiple_files",
        "search_files"
      ],
      "command": "npx",
      "disabled_resourceTemplates": [],
      "env": {
        "WORKSPACE_PATH": "${CWD}"
      }
    },
    "git": {
      "args": ["mcp-server-git"],
      "autoApprove": [
        "git_status",
        "git_diff_unstaged",
        "git_diff_staged",
        "git_diff",
        "git_commit",
        "git_add",
        "git_reset",
        "git_log",
        "git_create_branch",
        "git_checkout",
        "git_show",
        "git_init",
        "git_branch"
      ],
      "command": "uvx"
    },
    "github": {
      "autoApprove": [
        "add_comment_to_pending_review",
        "add_issue_comment",
        "add_sub_issue",
        "assign_copilot_to_issue",
        "cancel_workflow_run",
        "create_and_submit_pull_request_review",
        "create_branch",
        "create_gist",
        "create_issue",
        "create_or_update_file",
        "create_pending_pull_request_review",
        "create_pull_request",
        "create_pull_request_with_copilot",
        "create_repository",
        "delete_file",
        "delete_pending_pull_request_review",
        "delete_workflow_run_logs",
        "dismiss_notification",
        "download_workflow_run_artifact",
        "fork_repository",
        "get_code_scanning_alert",
        "get_commit",
        "get_dependabot_alert",
        "get_discussion",
        "get_discussion_comments",
        "get_file_contents",
        "get_global_security_advisory",
        "get_issue",
        "get_issue_comments",
        "get_job_logs",
        "get_latest_release",
        "get_me",
        "get_notification_details",
        "get_pull_request",
        "get_pull_request_comments",
        "get_pull_request_diff",
        "get_pull_request_files",
        "get_pull_request_reviews",
        "get_pull_request_status",
        "get_release_by_tag",
        "get_secret_scanning_alert",
        "get_tag",
        "get_team_members",
        "get_teams",
        "get_workflow_run",
        "get_workflow_run_logs",
        "get_workflow_run_usage",
        "list_branches",
        "list_code_scanning_alerts",
        "list_commits",
        "list_dependabot_alerts",
        "list_discussion_categories",
        "list_discussions",
        "list_gists",
        "list_global_security_advisories",
        "list_issue_types",
        "list_issues",
        "list_notifications",
        "list_org_repository_security_advisories",
        "list_pull_requests",
        "list_releases",
        "list_repository_security_advisories",
        "list_secret_scanning_alerts",
        "list_sub_issues",
        "list_tags",
        "list_workflow_jobs",
        "list_workflow_run_artifacts",
        "list_workflow_runs",
        "list_workflows",
        "manage_notification_subscription",
        "manage_repository_notification_subscription",
        "mark_all_notifications_read",
        "merge_pull_request",
        "push_files",
        "remove_sub_issue",
        "reprioritize_sub_issue",
        "request_copilot_review",
        "rerun_failed_jobs",
        "rerun_workflow_run",
        "run_workflow",
        "search_code",
        "search_issues",
        "search_orgs",
        "search_pull_requests",
        "search_repositories",
        "search_users",
        "submit_pending_pull_request_review",
        "update_gist",
        "update_issue",
        "update_pull_request",
        "update_pull_request_branch"
      ],
      "disabled": false,
      "headers": {
        "Authorization": "Bearer ${GITHUB_PERSONAL_ACCESS_TOKEN}"
      },
      "url": "https://api.githubcopilot.com/mcp/"
    },
    "memory": {
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "autoApprove": [
        "create_entities",
        "create_relations",
        "add_observations",
        "delete_entities",
        "delete_observations",
        "delete_relations",
        "read_graph",
        "search_nodes",
        "open_nodes"
      ],
      "command": "npx"
    },
    "task_master": {
      "args": ["-y", "--package=task-master-ai", "task-master-ai"],
      "autoApprove": [
        "initialize_project",
        "models",
        "rules",
        "parse_prd",
        "analyze_project_complexity",
        "expand_task",
        "expand_all",
        "scope_up_task",
        "scope_down_task",
        "get_tasks",
        "get_task",
        "next_task",
        "complexity_report",
        "set_task_status",
        "generate",
        "add_task",
        "add_subtask",
        "update",
        "update_task",
        "update_subtask",
        "remove_task",
        "remove_subtask",
        "clear_subtasks",
        "move_task",
        "add_dependency",
        "remove_dependency",
        "validate_dependencies",
        "fix_dependencies",
        "response-language",
        "list_tags",
        "add_tag",
        "delete_tag",
        "use_tag",
        "rename_tag",
        "copy_tag",
        "research"
      ],
      "command": "npx",
      "env": {
        "GOOGLE_API_KEY": "${GEMINI_API_KEY}"
      }
    },
    "time": {
      "args": ["mcp-server-time"],
      "autoApprove": ["get_current_time", "convert_time"],
      "command": "uvx"
    },
    "vectorcode-mcp-server": {
      "args": [],
      "autoApprove": ["ls", "query", "vectorise", "files_rm", "files_ls"],
      "command": "vectorcode-mcp-server",
      "disabled": false
    }
  }
}
