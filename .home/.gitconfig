[user]
	email = boydaihungst@gmail.com
	name = Huy Hoang
	signingkey = 576E8C39B741D2DA
[push]
	autoSetupRemote = true
[color]
		ui = auto
	status = auto
	branch = auto
	diff = auto
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = master
[core]
	longpaths = true
	quotepath = off
	pager = delta
[rerere]
	enabled = 1
[cola]
	startupmode = folder
[commit]
	gpgsign = true
[gpg]
	program = gpg
[alias]
  # one-line log
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

  a = add
  ap = add -p
  c = commit --verbose
  ca = commit -a --verbose
  cm = commit -m
  cam = commit -a -m
  m = commit --amend --verbose
  
  d = diff
  ds = diff --stat
  dc = diff --cached

  s = status -s
  co = checkout
  cob = checkout -b
  # list branches sorted by last modified
  b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

  # list aliases
  la = "!git config -l | grep alias | cut -c 7-"
	aliases = config --get-regex 'alias*'

	rb = "!f() { \
            echo fetching...; \
            git fetch; \
            if [ $? -eq 0 ]; then \
                last_status=$(git status --untracked-files=no --porcelain); \
                if [ \"$last_status\" != \"\" ]; then \
                    echo stashing local changes...; \
                    git stash; \
                else \
                    echo nothing to stash...; \
                fi;\
                if [ $? -eq 0 ]; then \
                    echo rebasing...;\
                    git rebase;\
                    if [ $? -eq 0 ]; then \
                        if [ \"$last_status\" != \"\" ]; then\
                            echo applying stashed changes...;\
                            git stash pop;\
                            if [ $? -ne 0 ]; then \
                                echo STASH POP FAIL - you will need to resolve merge conflicts with git mergetool; \
                            fi; \
                        fi; \
                    else \
                        echo REBASE FAILED - you will need to manually run stash pop; \
                    fi;\
                fi;\
            fi; \
            if [ $? -ne 0 ]; then \
                echo ERROR: Operation failed; \
            fi; \
        }; f"
[safe]
	directory = /home/huyhoang/.local/share/nvim/lazy/diffview.nvim
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
[merge]
	conflictStyle = zdiff3
